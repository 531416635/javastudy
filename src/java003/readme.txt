封装： 封装隐藏了类的内部实现机制。

继承： 继承是为了重用父类代码。

多态： 我们只有在运行的时候才会知道引用变量所指向的具体实例对象

	总结：指向子类的父类引用（如：Wine e =new JNC();中的e）由于向上转型
了，它只能访问父类中拥有的方法和属性，而对于子类中存在而父类中不存在的方法，
该引用是不能使用的，尽管是重载该方法。若子类重写了父类中的某些方法，在调用这些
方法的时候，必定是使用子类中定义的这些方法（动态调用）---最后一句是关键（子类重写父类中的方法）

java实现多态有三个必要条件：继承、重写、向上转型。
	继承：在多态中必须存在有继承关系的子类和父类
	重写：子类对父类中某些方法进行重新定义，在调用这些方法是就会调用子类的方法
	向上转型：在多态中需要将子类的引用赋给父类对象，只有这样该引用才能够具备技能调用父类的
	方法和子类的方法

实现形式
	在Java中有两种形式可以实现多态：继承和接口







